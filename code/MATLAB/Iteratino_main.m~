%
%A: line from left to right first side
%B: line from right to left first side
%C: double line first side
%D: free line from right to left first side
%E: line from left to right second side
%G: line from right to left second side
%F: double line second side
%H: free line from left to right second side

%Goeschenen                                                      Bellinzona
% ---------------_____________-------------------____________--------------
%    <<Line D<<                    <<Line G<<                  <<Line B<<
% --------------- <<Line C>>  ------------------- <<Line F>> --------------
%    >>Line A>>  _____________     >>Line E>>    ____________  >>Line H>>
% ---------------             ------------------             --------------
%                ligth n. 1                       ligth n. 2



%% Initialising data
%time initialisation
m = 0;      %minute
h = 0;      %hour
d = 0;      %day

%data from excel file
%number of cars per hour in direction Bellinzona
numr1 = xlsread('Copia_di_Dati2015Gottardo(2830).xlsx',2,'F45:AC47');
R1=round(numr1);
%number of cars per hour in direction G?schenen
numr2 = xlsread('Copia_di_Dati2015Gottardo(2830).xlsx',3,'F45:AC47');
R2=round(numr1);
%Random matrix for creating casr (see the RandGen function)
MRR1 = RandGen(R1);
MRR2 = RandGen (R2);

%number of iterations of simulation
nd= 3;
simtime=86400 * nd - 1; %-1 so the simulation terminates at 23h 59m 59s of the day set

trep = 250;
flux3D= zeros(trep,nd*24);
flux3H= zeros(trep,nd*24);
Tx3H= zeros(trep,5000*nd);
Tx3D= zeros(trep,5000*nd);


% set lines:
% set length
% initially void
% a space/cell is 5 meter
af=100;
bf=af;
cf=78;
df=af;
ef=136;
ff=100;
gf=ef;
hf=bf;

%% Begin multiple iteration with changing time
for st=1: 1 : trep
    
    %% Initialising and resetting parameters for each iteration
    
    TH=zeros(1,simtime);
    TD=zeros(1,simtime);
    car_counterD = 0;
    car_counterH = 0;
    fluxD = zeros(1,24);
    fluxH = zeros(1,24);
    
    %time initialisation
    m = 0;
    h = 0;
    d = 0;
    
    %Random matrix for creating cars (see the RandGen function)
    MR1 = MRR1;
    MR2 = MRR2;
    %initialising car number
    nr1 = 1;
    nr2 = -1;
    %initialising wait queue
    wr1 = CQueue();
    wr2 = CQueue();
    
    
    % FIRST traffic light parameters
    timer1=0;
    tg1 = 2+1*st;
    tr1 = 40;
    ttot1 = 2*tg1+2*tr1;
    wl1 = CQueue();
    
    % SECOND traffic light parameters
    timer2=0;
    tg2 = 2+1*st;
    tr2 = 70;
    ttot2 = 2*tg2+2*tr2;
    wl2 = CQueue();
    
    %reset lines
    A=zeros(1,af);
    B=zeros(1,bf);
    C=zeros(1,cf);
    D=zeros(1,df);
    E=zeros(1,ef);
    F=zeros(1,ff);
    G=zeros(1,gf);
    H=zeros(1,hf);
    
    
    %% Single simulation
    for t=1:1:simtime
        
        %% Minute, hour, and day parameters
        % minute counter
        if (t>0) && (mod(t,60)==0)
            m = m+1;
        end
        % hour counter
        if (m>0) && (mod(m,60)==0)
            h = h+1;
            m = 0;
        end
        % day counter
        if (h>0) && (mod(h,24)==0)
            d = d+1;
            h=0;
        end
        
        %% Moving cars
        
        %  AUTOMATIC MOVEMENT
        
        %move car to the new section after finish C --> E
        if (C(1,length(C))>0) && (E(1,1) == 0)
            E(1,1)=C(1,length(C));
            C(1,length(C))= 0;
        end
        
        %move car to the new section after finish F --> H
        if (F(1,length(F))>0) && (H(1,1) == 0)
            H(1,1)=F(1,length(F));
            F(1,length(F))= 0;
        end
        
        %move car to the new section after finish C --> D
        if (C(1,1)<0) && (D(1,length(D))== 0)
            D(1,length(D))=C(1,1);
            C(1,1)= 0;
        end
        
        %move car to the new section after finish F --> G
        if (F(1,1)<0) && (G(1,length(G))== 0)
            G(1,length(G))=F(1,1);
            F(1,1)= 0;
        end
        
        % NORMAL MOUVMENT
        %each car moves 2 cells to the right (or to the left) if possible
        %estimated velocity 10 m/s (data from ASTRA)
        A = MoveForward(A);
        A = MoveForward(A);
        E = MoveForward(E);
        E = MoveForward(E);
        G = MoveBackward(G);
        G = MoveBackward(G);
        D = MoveBackward(D);
        D = MoveBackward(D);
        C = MoveForward(C);
        C = MoveForward(C);
        C = MoveBackward(C);
        C = MoveBackward(C);
        H = MoveForward(H);
        H = MoveForward(H);
        B = MoveBackward(B);
        B = MoveBackward(B);
        F = MoveForward(F);
        F = MoveForward(F);
        F = MoveBackward(F);
        F = MoveBackward(F);
        
        
        %% CREATING CAR SECTION
        
        %first we have to empty the queue for A
        A = EmtingQueueForward(A,wr1);
        % new car enters A line according to the random matrix
        if MR1(1, 86400*(d)+h*3600+mod(t,3600)+1) == 1
            nr1 = nr1 + 1;
            A = CreateForward(A,nr1, wr1);
            MR1(1, 86400*(d)+h*3600+mod(t,3600)+1)= nr1;
            
        elseif MR1(1, 86400*(d)+h*3600+mod(t,3600)+1) == 0
            
        else
            error('Error. \nproblem crating car line A a time %d',t);
        end
        
        %first we have to emting the queue for B
        B = EmtingQueueBackward(B,wr2);
        % new car enters B line accodingi to the random matrix        
        if MR2(1,86400*(d)+h*3600+mod(t,3600)+1) == 1
            nr2 = nr2 - 1;
            B = CreateBackward(B,nr2,wr2);
            MR2(1,86400*(d)+h*3600+mod(t,3600)+1) = nr2;
            
        elseif MR2(1, 86400*(d)+h*3600+mod(t,3600)+1) == 0
            
        else
            error('Error. \nproblem crating car line B a time %d',t);
        end
        
        
        
        
        %% traffic lights
        [A, G, C, timer1] = TrafficLight(A, G, C, timer1, tg1, tr1, ttot1, wl1);
        [E, B, F, timer2] = TrafficLight(E, B, F, timer2, tg2, tr2, ttot2, wl2);
        
        if ~(wl1.isempty() && wl2.isempty)
            error('Si riempono queue del semaforo');
        end
        
        %% Prepering vector to plot
        %empting D and plotting what is going out
        if D(1,1) == 0
            TD(1,t)=0;
        elseif D(1,1)< 0
            TD(1,t)=D(1,1);
            D(1,1)=0;
            car_counterD = car_counterD + 1;
        end
        
        %empting H and plotting what is going out
        if H(1,length(H)) == 0
            TH(1,t)=0;
        elseif H(1,length(H)) > 0
            TH(1,t)=H(1,length(H));
            H(1,length(H)) = 0;
            car_counterH = car_counterH +1;
        end
        
        %Plotting things
        if mod(t,3600) == 0 && h < 24
            fluxD(1,d*24+h+1)=car_counterD;
            fluxH(1,d*24+h+1)=car_counterH;
            car_counterD = 0;
            car_counterH = 0;
        end
        
        
        
    end
    
    %% Prepering data 3D plotting
    %maxing array with time op percorenza passo fo each car(first car has
    %number 2)
    %direction Bellinzona
    TxH = zeros(1, max(TH));
    for i=2 : 1 : max (TH)
        TxH(1,i) = (find(TH==i,1) - find(MR1==i,1));
    end
    %direction Goeschenen
    TxD = zeros(1, abs(min(TD)));
    for i=-2 : -1 : min (TD)
        TxD(1,abs(i)) = (find(TD==i,1) - find(MR2==i,1));
    end
    
    if length(TxH) < 5000*nd
        TxH(1,length(TxH)+1:5000*nd)=zeros;
    end
    
    if length(TxD) < 5000*nd
        TxD(1,length(TxD)+1:5000*nd)=zeros;
    end
    
    Tx3H(st,:) = TxH;
    
    Tx3D(st,:) = TxD;
    
    flux3D(st,:) = fluxD;
    
    flux3H(st,:) = fluxH;
    
    iteration=st
    
end



%% 3D plotting

% plot of how much time dase it take to pass the pass
%3D plot
figure
subplot(2,1,1);
mesh(Tx3D);
xlabel('car number'),
ylabel('number of iterations');
zlabel('time to pass');
title('Flux of cars to Goeschenen');


subplot(2,1,2);
mesh(Tx3H);
xlabel('car number'),
ylabel('number of iterations');
zlabel('time to pass');
title('Flux of cars to Airolo');


%3D plot
figure
subplot(2,1,1);
mesh(flux3D);
xlabel('hours'),
ylabel('number of iterations');
zlabel('number of cars');
title('Travel Time to Goeschenen');


subplot(2,1,2);
mesh(flux3H);
xlabel('hours'),
ylabel('number of iterations');
zlabel('number of cars');
title('Travel Time to Airolo');




